// Main Functions
- Item Management
	- Brand/ Category/ Subcategory/ Color

- Sell/ Shopping

- Order Management
	- items/ customer
	- orders/ order_detail

- Customer Manage
	- Reports

-brands
=> 1 | b1 | photo
=> 2 | b2 | photo

-categories
=> 1 | fashion    | photo
=> 2 | electronic | photo

-subcategories
=> 1 | baby wear | 1

php artisan make:migration create_TableName_table

Database_name-- os_laravel

Model Relationship
--------------------
- one-to-one
	-hasOne(p)
	-belongsTo(c)

- one-to-many
	-hasMany(p)
	-belongsTo(c)

- many-to-many
	-belongsToMany(p)
	-belongsToMany(c)

-homework (using backend template)
------------------------------------
-create route for dashboard page (get)
- create master blade (views/backendtemplate.blade.php)
- create child blade (views/backend/dashboard.blade.php)
- create controller BackendController
	- create method dashboardfun()
	- call view (backend.dashboard)

Item (CRUD)
------------
create - show form, store data
retrieve - display data (all , row)
update - show form with old value, update data
delete - delelte data

Authentication
----------------
-installation
	-nodejs (call npm in terminal)
-Docs
	-Security / Authentication
-Commands
	- composer require laravel/ui
	- php artisan ui bootstrap --auth
	-npm install
	-npm run dev
-Routes
	-localhost:8000/login
	-localhost:8000/register

GIT
-----
- git init
- git add
- git commit -m "message"
- git remote add origin url
- git push -u origin master
- git pull


GIT (upload project into your repo)
-----
- git init (will create .git folder)
- git add .
- git commit -m "message"
- git remote 
- git push -u origin master

GIT(clone)
----
- git clone url
- cd folder
- cp .env.example.env (-)
- composer install
- php artisan key:generate
- npm install
- npm run dev

GIT (team)
----
- git pull